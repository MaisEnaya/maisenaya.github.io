/* start of global styling */
* {
    padding: 0;
    margin: 0;
}


:root {
    --magenta: #B55AB7;
    --white: #F0EFEE;
    --black: #191E25;
    --pink: #D392D3;
    --darkMagenta: #8B3779;
    --fun: 300;
    /* fun hue changes on mouse position, for fun! */

}

.screen-reader-only {
    position: absolute;
    width: 1px;
    clip: rect(0 0 0 0);
    overflow: hidden;
    white-space: nowrap;
}

body {
    background-color: var(--white);
    /* background-color: hsl(var(--fun), 100%, 90%); */
    color: var(--black);
    transition: color 0.3s ease;
    font-family: 'Cabin', sans-serif;
    max-width: 1200px;
    margin: auto;
}

/* fonts styling */
h1.special {
    font-family: 'Playfair Display', serif;
    font-style: italic;
    font-size: 8em;
    line-height: 1em;
    margin: .25em 0;
    text-align: center
}

h1.special span {
    font-family: 'Playfair Display',
        serif;
    font-size: .618em;
    /* golden ratio, 1:61*/
    /* line-height: .5em; */
    line-height: 1em;
    display: block;

}

h1 {
    font-family: 'Raleway', sans-serif;
    font-size: 3em;
    font-weight: bold;
    text-transform: capitalize
}

h2 {
    font-family: 'Raleway', sans-serif;
    font-size: 1.5em;
    text-align: left;
    margin: 1em 0;
    text-transform: capitalize;
}

h3 {
    font-family: 'Raleway', sans-serif;
}

p {
    font-family: 'Cabin', sans-serif;
    text-wrap: balance;
    /* more on line breaks https://css-tricks.com/where-lines-break-is-complicated-heres-all-the-related-css-and-html/
    it prevents the visual issue of footer p putting just the heart in a new line in mobile screen */
}


.fun-text {
    color: hsl(var(--fun), 60%, 30%);
    margin: -.5em 0 !important;
}

/* links styling */
a {
    text-decoration: none;
    display: flex;
    align-items: baseline;

}

a:hover {
    text-decoration: underline;
    color: hsl(var(--fun), 80%, 40%);
}

/* a[target="_blank"]::after {} */

a svg {
    fill: hsl(var(--fun), 60%, 30%);
    height: 24px;
}

/* .funHover:hover .frame  */
a:hover svg {
    fill: hsl(var(--fun), 80%, 40%);
}

/* end of fonts styling */

/* buttons */
/* resetting defualt button styling */
button {
    background-color: transparent;
    font-family: inherit;
    font-style: inherit;
    font-weight: inherit;
    line-height: inherit;
    color: inherit;
    outline: solid;
    outline-color: var(--black);
    outline-width: 1px;
    padding: 0;
}

.funHover:hover {
    background-color: hsl(var(--fun), 60%, 90%);
    text-decoration: none;
    cursor: pointer;
}

/* resource refrenced for effecting multiple elemnts on hover
 https://www.tutorialspoint.com/how-to-affect-other-elements-when-one-element-is-hovered-in-html#:~:text=To%20affect%20other%20elements%20when%20one%20element%20is%20hovered%2C%20an,hover%20affect%20is%20then%20visible. */
.funHover:hover .frame {
    background-color: hsl(var(--fun), 60%, 90%);
    /* text-decoration: underline; */
    cursor: pointer;
    outline: hsl(var(--fun), 60%, 60%) solid 10px;

}

.funHover:hover .workH {
    /* color: hsl(var(--fun), 80%, 50%); */
    /* mix-blend-mode: hard-light; */
    /* text-shadow: -2px 0px 0px var(--magenta); */
    text-shadow: -1px 1px 0px hsl(var(--fun), 80%, 80%),
        1px 1px 0px hsl(var(--fun), 80%, 80%),
        1px -1px 0 hsl(var(--fun), 80%, 80%),
        -1px -1px 0 hsl(var(--fun), 80%, 80%);
    /* text outline with text shadow https://www.educative.io/answers/how-to-create-a-text-outline-using-css */
    font-size: 1.8em;
    transition: all .2s ease;

}

/* 
button .frame:hover {
    background-color: hsl(var(--fun), 40%, 90%);

} */

/* button {
    background-color: hsl(var(--fun), 100%, 90%);
    border-radius: 25px;
    padding: .25em 2em;
    border: none;
    margin: 1em;
}
 */


.grid {
    display: grid !important;
    grid-template-columns: repeat(12, 1fr);
    grid-gap: 16px;
    padding: 1em 5vw;
}

.mobile {
    display: none !important;
}

spacer {
    display: block;
}

footer {
    text-align: center;
    /* background-color: var(--white); */
    margin: 4em auto 1em auto
}

/* ends of global styling */

/* homepage start */
/* start of sections code */
/* the hero section */
.hero {
    height: 100vh;
    display: grid;
    place-items: center;
    text-align: left;
    /* Vertically and horizontally center items */
}

.hero-text {
    grid-column: span 13;
    /* background-color: #B55AB7; */
}

.scroll {
    position: fixed;
    bottom: 100px;
    right: 1em;
    z-index: -1;
}

/* end of hero section */
/* start of featured work section */

.featured-work.grid {
    grid-column: 1/13;
    row-gap: 2em;
}

.bar {
    grid-column: 2/12;
    position: sticky;
}

.work-grid {
    grid-column: 2/12;
    display: grid;
    row-gap: 10%;
}

.work-cell {
    display: grid;
    grid-template-columns: 1fr 1fr;
    /* gap: 2em; */
}

.frame {
    background-color: var(--white);
    outline: hsl(var(--fun), 10%, 60%) solid 10px;
    filter: drop-shadow(0px 0px 60px hsl(var(--fun), 40%, 30%));
    display: flex;
    flex-wrap: wrap;

}



/* ran thru problems in safari, replacing it with a fall back code created with the help of chat gpt */
.frame::before {
    /* Create a pseudo-element to overlay the image */

    content: "";
    background-color: hsl(var(--fun), 40%, 30%);
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    z-index: 1;
    /* Ensure it's above the image */
    mix-blend-mode: hue;
    opacity: .5;
}


/* start of fall back code created with chat gpt help */
/* Default styles for all browsers */
.frame::before {
    content: "";
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    z-index: 1;
    opacity: .5;
}

/* CSS for browsers that support filters and mix-blend-mode */
@supports (filter: blur(1px)) and (mix-blend-mode: hue) {
    .frame::before {
        background-color: hsl(var(--fun), 40%, 30%);
        mix-blend-mode: hue;
    }
}

/* Fallback styles for browsers that do not support filters or mix-blend-mode */
@supports not ((filter: blur(1px)) and (mix-blend-mode: hue)) {
    .frame::before {
        background-color: hsl(var(--fun), 40%, 30%);
        /* Fallback background color */
    }
}

/* end of fall back code created with chat gpt help */


.frame img {
    max-width: 300px;
    height: 300px;
    object-fit: cover;
    margin: auto;
}

.img-container {
    margin: auto;
    padding: 2em;
}

.work-cell .text {
    text-align: left;
    margin: auto 2em;
    font-size: 1.25em;
}

/* end of featured work section */

/* lets connect section */

.connect {
    padding: 1em;
    background-color: var(--white);

}

/* end of lets connect section */


/* end of homepage */


/* Media query for small screens */
@media (max-width: 768px) {
    .mobile {
        display: block !important;
    }

    .desktop {
        display: none !important;
    }

    h2 {
        margin: 0.5em 0;
    }

    h1.special {
        font-size: 7em;
    }

    h1.special span {
        font-size: 3rem;
    }


    .work-cell {
        display: block;
    }

    .work-cell .text {
        margin: 1em;
    }

    .work-grid {
        row-gap: 5%;
    }

    .img-container {
        margin: auto;
        padding: 10px;
    }

    .frame {
        background-color: transparent;
        outline: none;
        filter: drop-shadow(0px 0px 60px hsl(var(--fun), 40%, 30%));
    }

    .frame img {
        max-width: 65vw;
        height: 65vw;
        object-fit: cover;
        margin: auto;
    }

}